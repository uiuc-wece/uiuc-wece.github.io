{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from \"axios\";\n\nfunction getServerApiUrl() {\n  return \"localhost:3003/api\";\n}\n\nvar callFetchAsync = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(url, method, body) {\n    var headers,\n        options,\n        response,\n        _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            headers = _args.length > 3 && _args[3] !== undefined ? _args[3] : {};\n            _context.prev = 1;\n            options = {\n              headers: new Headers(_objectSpread({\n                \"Content-Type\": \"application/json\"\n              }, headers)),\n              body: body\n            };\n\n            if (body) {\n              options.body = JSON.stringify(body);\n            }\n\n            _context.next = 6;\n            return axios(_objectSpread({\n              method: method,\n              url: getServerApiUrl() + url,\n              withCredentials: true\n            }, options));\n\n          case 6:\n            response = _context.sent;\n            _context.next = 9;\n            return response.json();\n\n          case 9:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](1);\n            return _context.abrupt(\"return\", {\n              success: false,\n              data: _context.t0\n            });\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 12]]);\n  }));\n\n  return function callFetchAsync(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar postAsync = function postAsync(url, body) {\n  return callFetchAsync(url, \"POST\", body);\n};\n\nexport { postAsync };","map":{"version":3,"sources":["/Users/eugeniachen/git/weceweb/next-app/utils/server.js"],"names":["axios","getServerApiUrl","callFetchAsync","url","method","body","headers","options","Headers","JSON","stringify","withCredentials","response","json","success","data","postAsync"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,eAAT,GAA2B;AACzB,SAAO,oBAAP;AACD;;AAED,IAAMC,cAAc;AAAA,sEAAG,iBAAOC,GAAP,EAAYC,MAAZ,EAAoBC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0BC,YAAAA,OAA1B,2DAAoC,EAApC;AAAA;AAEbC,YAAAA,OAFa,GAEH;AACdD,cAAAA,OAAO,EAAE,IAAIE,OAAJ;AACP,gCAAgB;AADT,iBAEJF,OAFI,EADK;AAKdD,cAAAA,IAAI,EAAJA;AALc,aAFG;;AAUnB,gBAAIA,IAAJ,EAAU;AACRE,cAAAA,OAAO,CAACF,IAAR,GAAeI,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAf;AACD;;AAZkB;AAAA,mBAcIL,KAAK;AAC1BI,cAAAA,MAAM,EAAEA,MADkB;AAE1BD,cAAAA,GAAG,EAAEF,eAAe,KAAKE,GAFC;AAG1BQ,cAAAA,eAAe,EAAE;AAHS,eAIvBJ,OAJuB,EAdT;;AAAA;AAcbK,YAAAA,QAda;AAAA;AAAA,mBAqBNA,QAAQ,CAACC,IAAT,EArBM;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6CAuBZ;AACLC,cAAAA,OAAO,EAAE,KADJ;AAELC,cAAAA,IAAI;AAFC,aAvBY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAdb,cAAc;AAAA;AAAA;AAAA,GAApB;;AA8BA,IAAMc,SAAS,GAAG,SAAZA,SAAY,CAACb,GAAD,EAAME,IAAN,EAAe;AAC/B,SAAOH,cAAc,CAACC,GAAD,EAAM,MAAN,EAAcE,IAAd,CAArB;AACD,CAFD;;AAIA,SAASW,SAAT","sourcesContent":["import axios from \"axios\";\n\nfunction getServerApiUrl() {\n  return \"localhost:3003/api\";\n}\n\nconst callFetchAsync = async (url, method, body, headers = {}) => {\n  try {\n    const options = {\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n        ...headers,\n      }),\n      body,\n    };\n\n    if (body) {\n      options.body = JSON.stringify(body);\n    }\n\n    const response = await axios({\n      method: method,\n      url: getServerApiUrl() + url,\n      withCredentials: true,\n      ...options,\n    });\n\n    return await response.json();\n  } catch (err) {\n    return {\n      success: false,\n      data: err,\n    };\n  }\n};\n\nconst postAsync = (url, body) => {\n  return callFetchAsync(url, \"POST\", body);\n};\n\nexport { postAsync };\n"]},"metadata":{},"sourceType":"module"}
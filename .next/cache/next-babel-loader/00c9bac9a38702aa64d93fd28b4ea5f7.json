{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/layout\";\nimport SectionHead from \"../components/sectionhead\";\nimport styles from \"../styles/Calendar.module.css\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Container from \"react-bootstrap/Container\";\nexport default function Calendar() {\n  var _useState = useState([]),\n      events = _useState[0],\n      setEvents = _useState[1];\n\n  useEffect(function () {\n    function formatTime(date) {\n      var hours = date.getHours();\n      var minutes = date.getMinutes();\n      var ampm = hours >= 12 ? \"pm\" : \"am\";\n      hours = hours % 12;\n      hours = hours ? hours : 12;\n      minutes = minutes < 10 ? \"0\" + minutes : minutes;\n      var strTime = hours + \":\" + minutes + \" \" + ampm;\n      return strTime;\n    }\n\n    var fetchEvents = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var cal_id, api_key, dateNow, result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                cal_id = \"pmtthq7beefrulnrjbd9nj9e5s@group.calendar.google.com\";\n                api_key = \"AIzaSyDCdsXt9s_kxJp3SUjzzHng1Flgbao7jpc\";\n                dateNow = new Date();\n                _context.next = 5;\n                return axios.get(\"https://www.googleapis.com/calendar/v3/calendars/\" + cal_id + \"/events\" + \"?key=\" + api_key, {\n                  params: {\n                    timeMin: dateNow.toISOString(),\n                    timeMax: new Date(dateNow.setMonth(dateNow.getMonth() + 1)).toISOString(),\n                    orderBy: \"startTime\",\n                    singleEvents: true\n                  }\n                }).then(function (response) {\n                  var events = [];\n\n                  if (response.data.items) {\n                    var eventItems = response.data.items;\n                    eventItems.forEach(function (e) {\n                      var startTime = e.start.dateTime ? new Date(e.start.dateTime) : new Date(e.start.date);\n                      var endTime = e.end.dateTime ? new Date(e.end.dateTime) : new Date(e.end.date);\n                      var startDate = startTime.toDateString();\n                      var endDate = endTime.toDateString();\n                      var startTimeString = startTime && startTime.getHours() ? formatTime(startTime) : \"\";\n                      var endTimeString = endTime && endTime.getHours() ? formatTime(endTime) : \"\";\n                      var timeString = endTimeString ? \"\".concat(startTimeString, \" - \").concat(endTimeString) : startTimeString;\n                      var dateString = startDate == endDate ? \"\".concat(startDate, \", \").concat(timeString) : \"\".concat(startDate, \", \").concat(startTimeString, \" - \").concat(endDate, \", \").concat(endTimeString);\n                      var locationString = e.location ? \"\".concat(e.location) : \"\";\n                      events.push({\n                        id: e.id,\n                        htmlLink: e.htmlLink,\n                        summary: e.summary,\n                        locationString: locationString,\n                        dateString: dateString\n                      });\n                    });\n                  }\n\n                  return events;\n                });\n\n              case 5:\n                result = _context.sent;\n                setEvents(result);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchEvents() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchEvents();\n  }, []);\n  return __jsx(Layout, null, __jsx(\"div\", {\n    className: \"content\"\n  }, __jsx(Container, {\n    fluid: true,\n    className: \"section\"\n  }, __jsx(SectionHead, {\n    title: \"Events_\",\n    top: true\n  }), __jsx(\"div\", {\n    id: \"events\"\n  }, events ? events.map(function (e) {\n    return __jsx(\"a\", {\n      key: e.id,\n      href: e.htmlLink,\n      target: \"_blank\"\n    }, __jsx(\"div\", {\n      className: styles[\"event-card\"]\n    }, __jsx(\"h4\", null, e.summary), __jsx(\"h5\", null, e.locationString), __jsx(\"h6\", null, e.dateString)));\n  }) : null))));\n}","map":null,"metadata":{},"sourceType":"module"}
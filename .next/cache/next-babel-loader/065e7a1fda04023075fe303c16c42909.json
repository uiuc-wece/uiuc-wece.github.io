{"ast":null,"code":"var _jsxFileName = \"/Users/eugeniachen/git/weceweb/next-app/pages/calendar.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/layout\";\nimport SectionHead from \"../components/sectionhead\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Container from \"react-bootstrap/Container\";\nexport default function Calendar() {\n  const {\n    0: events,\n    1: setEvents\n  } = useState([]);\n  useEffect(() => {\n    var cal_id = \"pmtthq7beefrulnrjbd9nj9e5s@group.calendar.google.com\";\n    var api_key = \"AIzaSyDCdsXt9s_kxJp3SUjzzHng1Flgbao7jpc\";\n\n    function formatTime(date) {\n      var hours = date.getHours();\n      var minutes = date.getMinutes();\n      var ampm = hours >= 12 ? \"pm\" : \"am\";\n      hours = hours % 12;\n      hours = hours ? hours : 12;\n      minutes = minutes < 10 ? \"0\" + minutes : minutes;\n      var strTime = hours + \":\" + minutes + \" \" + ampm;\n      return strTime;\n    }\n\n    var dateNow = new Date();\n\n    const fetchEvents = async () => {\n      const result = await axios.get(\"https://www.googleapis.com/calendar/v3/calendars/\" + cal_id + \"/events\" + \"?key=\" + api_key, {\n        timeMin: dateNow.toISOString(),\n        timeMax: new Date(dateNow.setMonth(dateNow.getMonth() + 1)).toISOString(),\n        orderBy: \"startTime\",\n        singleEvents: true\n      }).then(response => {\n        var events = [];\n        console.log(response.data.items);\n\n        if (response.data.items) {\n          events = response.data.items;\n          events.forEach(e => {\n            console.log(e); // var startTime = e.start.dateTime\n            //   ? new Date(e.start.dateTime)\n            //   : new Date(e.start.date);\n            // var endTime = e.end.dateTime\n            //   ? new Date(e.end.dateTime)\n            //   : new Date(e.end.date);\n            // var startDate = startTime.toDateString();\n            // var endDate = endTime.toDateString();\n            // var startTimeString =\n            //   startTime && startTime.getHours() ? formatTime(startTime) : \"\";\n            // var endTimeString =\n            //   endTime && endTime.getHours() ? formatTime(endTime) : \"\";\n            // var timeString = endTimeString\n            //   ? `${startTimeString} - ${endTimeString}`\n            //   : startTimeString;\n            // var dateString =\n            //   startDate == endDate\n            //     ? `${startDate}, ${timeString}`\n            //     : `${startDate}, ${startTimeString} - ${endDate}, ${endTimeString}`;\n            // var locationString = e.location ? `${e.location}` : \"\";\n            // return {\n            //   htmlLink: e.htmlLink,\n            //   summary: e.summary,\n            //   locationString: locationString,\n            //   dateString: dateString,\n            // };\n          });\n        }\n\n        console.log(events);\n        return events;\n      });\n      setEvents(result);\n    };\n\n    fetchEvents();\n  }, []);\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, __jsx(Container, {\n    fluid: true,\n    className: \"section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, __jsx(SectionHead, {\n    title: \"Events_\",\n    top: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    id: \"events\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, events ? events.map(e => __jsx(\"a\", {\n    href: e.htmlLink,\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    className: \"event-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 23\n    }\n  }, e.summary), __jsx(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 23\n    }\n  }, e.locationString), __jsx(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 23\n    }\n  }, e.dateString)))) : null))));\n}","map":{"version":3,"sources":["/Users/eugeniachen/git/weceweb/next-app/pages/calendar.jsx"],"names":["Layout","SectionHead","useEffect","useState","axios","Container","Calendar","events","setEvents","cal_id","api_key","formatTime","date","hours","getHours","minutes","getMinutes","ampm","strTime","dateNow","Date","fetchEvents","result","get","timeMin","toISOString","timeMax","setMonth","getMonth","orderBy","singleEvents","then","response","console","log","data","items","forEach","e","map","htmlLink","summary","locationString","dateString"],"mappings":"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","sourcesContent":["import Layout from \"../components/layout\";\nimport SectionHead from \"../components/sectionhead\";\n\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Container from \"react-bootstrap/Container\";\n\nexport default function Calendar() {\n  const [events, setEvents] = useState([]);\n\n  useEffect(() => {\n    var cal_id = \"pmtthq7beefrulnrjbd9nj9e5s@group.calendar.google.com\";\n    var api_key = \"AIzaSyDCdsXt9s_kxJp3SUjzzHng1Flgbao7jpc\";\n\n    function formatTime(date) {\n      var hours = date.getHours();\n      var minutes = date.getMinutes();\n      var ampm = hours >= 12 ? \"pm\" : \"am\";\n      hours = hours % 12;\n      hours = hours ? hours : 12;\n      minutes = minutes < 10 ? \"0\" + minutes : minutes;\n      var strTime = hours + \":\" + minutes + \" \" + ampm;\n      return strTime;\n    }\n\n    var dateNow = new Date();\n\n    const fetchEvents = async () => {\n      const result = await axios\n        .get(\n          \"https://www.googleapis.com/calendar/v3/calendars/\" +\n            cal_id +\n            \"/events\" +\n            \"?key=\" +\n            api_key,\n          {\n            timeMin: dateNow.toISOString(),\n            timeMax: new Date(\n              dateNow.setMonth(dateNow.getMonth() + 1)\n            ).toISOString(),\n            orderBy: \"startTime\",\n            singleEvents: true,\n          }\n        )\n        .then((response) => {\n          var events = [];\n          console.log(response.data.items);\n          if (response.data.items) {\n            events = response.data.items;\n            events.forEach((e) => {\n              console.log(e);\n              // var startTime = e.start.dateTime\n              //   ? new Date(e.start.dateTime)\n              //   : new Date(e.start.date);\n              // var endTime = e.end.dateTime\n              //   ? new Date(e.end.dateTime)\n              //   : new Date(e.end.date);\n              // var startDate = startTime.toDateString();\n              // var endDate = endTime.toDateString();\n              // var startTimeString =\n              //   startTime && startTime.getHours() ? formatTime(startTime) : \"\";\n              // var endTimeString =\n              //   endTime && endTime.getHours() ? formatTime(endTime) : \"\";\n              // var timeString = endTimeString\n              //   ? `${startTimeString} - ${endTimeString}`\n              //   : startTimeString;\n\n              // var dateString =\n              //   startDate == endDate\n              //     ? `${startDate}, ${timeString}`\n              //     : `${startDate}, ${startTimeString} - ${endDate}, ${endTimeString}`;\n              // var locationString = e.location ? `${e.location}` : \"\";\n              // return {\n              //   htmlLink: e.htmlLink,\n              //   summary: e.summary,\n              //   locationString: locationString,\n              //   dateString: dateString,\n              // };\n            });\n          }\n          console.log(events);\n          return events;\n        });\n\n      setEvents(result);\n    };\n    fetchEvents();\n  }, []);\n\n  return (\n    <Layout>\n      <div className=\"content\">\n        <Container fluid className=\"section\">\n          <SectionHead title=\"Events_\" top={true} />\n          <div id=\"events\">\n            {events\n              ? events.map((e) => (\n                  <a href={e.htmlLink} target=\"_blank\">\n                    <div className=\"event-card\">\n                      <h4>{e.summary}</h4>\n                      <h5>{e.locationString}</h5>\n                      <h6>{e.dateString}</h6>\n                    </div>\n                  </a>\n                ))\n              : null}\n          </div>\n        </Container>\n      </div>\n    </Layout>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}